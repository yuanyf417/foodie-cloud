<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.imooc.item.mapper.ItemsMapperCustom" >
  <select id="queryItemComments" parameterType="Map" resultType="com.imooc.item.pojo.vo.ItemCommentVO">
    SELECT
        ic.comment_level as commentLevel,
        ic.content as content,
        ic.sepc_name as specName,
        ic.created_time as createdTime,
        u.face as userFace,
        u.nickname as nickname
    FROM
        items_comments ic
    LEFT JOIN users u ON ic.user_id = u.id
    WHERE
        ic.item_id = #{paramsMap.itemId}
        <if test="paramsMap.level != null and paramsMap.level != '' ">
          AND ic.comment_level = #{paramsMap.level}
        </if>

  </select>

<!--    <select id="searchItems" parameterType="Map" resultType="com.immoc.vo.SearchItemsVO">
        SELECT
            i.id as itemId,
            i.item_name as itemName,
            i.sell_counts as sellCounts,
            ii.url as imgUrl,
            tempSpec.price_discount as price
        FROM
            items i
        LEFT JOIN items_img ii ON i.id = ii.item_id
        LEFT JOIN (SELECT item_id , MIN( price_discount ) as price_discount FROM items_spec GROUP BY item_id ) tempSpec ON i.id = tempSpec.item_id
        WHERE
            ii.is_main = 1
            <if test="paramsMap.keywords != null and paramsMap.keywords != '' ">
                AND i.item_name like '%${paramsMap.keywords}%'
            </if>

            order by

            <choose>

                <when test="paramsMap.sort == &quot;c&quot; ">
                    i.sell_counts desc
                </when>
                <when test="paramsMap.sort == &quot;p&quot; ">
                    tempSpec.price_discount asc
                </when>
                <otherwise>
                    i.item_name asc
                </otherwise>
            </choose>



    </select>
    k: 默认 ，代表默认排序，根据name
    c: 根据销量排序
    p: 根据价格排序               -->

   <!-- <select id="searchItemsByThirdCat" parameterType="Map" resultType="com.imooc.item.pojo.vo.SearchItemsVO">
        SELECT
        i.id as itemId,
        i.item_name as itemName,
        i.sell_counts as sellCounts,
        ii.url as imgUrl,
        tempSpec.price_discount as price
        FROM
        items i
        LEFT JOIN items_img ii ON i.id = ii.item_id
        LEFT JOIN (SELECT item_id , MIN( price_discount ) as price_discount FROM items_spec GROUP BY item_id ) tempSpec ON i.id = tempSpec.item_id
        WHERE
        ii.is_main = 1
        AND
        i.cat_id = #{paramsMap.catId}
        order by
        <choose>

            <when test="paramsMap.sort == &quot;c&quot; ">
                i.sell_counts desc
            </when>
            <when test="paramsMap.sort == &quot;p&quot; ">
                tempSpec.price_discount asc
            </when>
            <otherwise>
                i.item_name asc
            </otherwise>
        </choose>
    </select>-->

    <select id="searchItemsBySpecId" resultType="com.imooc.item.pojo.vo.ShopcartVO">
        SELECT
        i.id AS itemId,
        ii.url AS itemImgUrl,
        i.item_name AS itemName,
        it.id AS specId,
        it.`name` AS specName,
        it.price_discount AS priceDiscount,
        it.price_normal AS priceNormal
        FROM
        items_spec it
        LEFT JOIN items i ON it.item_id = i.id
        LEFT JOIN items_img ii ON ii.item_id = i.id
        WHERE
        ii.is_main = 1
        AND  it.id in
        <foreach collection="paramsList" index="index" item="specId" open="(" separator="," close=")">
            #{specId}
        </foreach>
    </select>
    <update id="decreaseItemSpecStock">
        update
          items_spec
        set
          stock = stock - #{pendingCounts}
        where
          id = #{specId}
        and
          stock >= #{pendingCounts}
    </update>
</mapper>